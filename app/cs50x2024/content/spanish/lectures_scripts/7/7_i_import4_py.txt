Entonces, ¿cómo podemos proceder a hacer eso? Bueno, permítanme continuar y hacer lo siguiente en su lugar. Permíteme seguir adelante y abrir una versión final de mi script de importación, esta que hace dos cosas en la parte superior. En la parte superior, voy a crear dos tablas, una llamada "shows", que tiene... También voy a limpiar los nombres de las columnas. IMDB es un poco poco convencional. Lo que la mayoría de la gente haría al describir un identificador único sería llamarlo ID, no tconst. Así que lo vamos a renombrar a ID. No van a llamar a su title primaryTitle. Lo llamarán title, así que lo vamos a renombrar como title. No lo llamarán startYear. Lo llamaremos year. Y ya está. Volveremos a la clave primaria en un momento.

Pero fíjate en esto. En mi nueva y última versión de este guion, propongo crear una segunda tabla llamada genres cuyo propósito en la vida es contener un valor llamado show_id y otro llamado genre. Entonces, ¿qué está pasando? Bueno, permíteme mostrarte esto. Si cargo la base de datos resultante de esta, shows4.db, y hago .schema, verás que de hecho tengo dos tablas. Permíteme continuar y SELECT * FROM shows WHERE title, esta vez, porque lo he renombrado de primaryTitle, = The Office. De acuerdo. Hay muchas oficinas. Pero vamos, AND year = 2005, que es en la que todos estamos pensando. Y es esa.

Y ahora, fíjate en esto. ¿Te das cuenta de qué estoy recuperando? Un ID, recupero un título y un año, pero nada de géneros. Esto se debe a que ahora hay otra tabla llamada genres que está separada. Y ya sabes, tengo algo de curiosidad. Veo que una tabla de géneros tiene show_id. Déjame ir y hacer esto. SELECT * FROM genres WHERE show_id =, y déjame hacer un poco de copiar y pegar aquí, = este show_id. ¿Y qué podría ver? Comedia.

Entonces, ¿qué hemos hecho ahora? Para cualquier programa de televisión que estuviera en la base de datos de IMDB que fuera una lista de géneros separados por comas, lo he ampliado, por así decirlo. He dividido ese valor en las comas. Y si la serie es una comedia, he añadido una fila en esta tabla de géneros, pero luego he anotado el ID de la serie junto a ese género para recordar que esa serie era de ese género. Pero si otra serie tiene varios campos, por ejemplo, sigamos adelante y busquemos no The Office sino, digamos, The Crown. Y solo hay uno de esos. Y ahora hago SELECT * FROM genres WHERE show_id = este número, veremos que, oh, The Crown ahora tiene drama e historia como género. Y por lo tanto, en la tabla de géneros, fíjate que hay dos ID y dos géneros. Pero ahora podemos utilizar una calidad. Ahora puedo buscar todas las comedias de 2019 de una manera bastante potente, SELECT * FROM shows WHERE id IN-- y aquí está la parte genial-- SELECT show_id FROM genres WHERE genre = "Comedy" AND year = 2019.

Así que esto es, ciertamente, un bocado, pero consideremos lo que está pasando. Primero, estoy seleccionando estrellas de espectáculos. Eso significa que me das todos los espectáculos en todas las columnas. Pero filtra de la siguiente manera, solo muéstrame aquellos espectáculos en los que el ID del espectáculo esté en la siguiente lista de ID. Ahora, puedes ver una consulta anidada dentro de los paréntesis aquí. Esta lista aquí selecciona todos los ID de espectáculo de la tabla de géneros donde el género = "Comedia". Por lo tanto, el paréntesis resaltado en este momento devuelve esencialmente una lista de todos los números de ID de los espectáculos que están asociados con la comedia, incluso si también están asociados con otras cosas. Y nos aseguramos de que el año sea igual a 2019.

Así que si ahora pulso Enter, veremos un montón de resultados, pero deberíamos ver, si los cuento usando mi sintaxis habitual, que hubo 1593 espectáculos que son comedias en 2019. Eso sí que es igual a la misma cuenta que hicimos antes utilizando like, pero está mejor diseñado en el sentido de que no hay ambigüedad. No estás buscando un substring, por así decirlo, en una lista separada por comas. De hecho, ahora puedes buscar de forma más sólida al haber rediseñado tus datos.

Y lo que realmente hemos hecho es algo como esto. En lugar de almacenar nuestros datos en una sola tabla llamada shows, y cada show tiene un ID, un título, un año y géneros, hemos explotado esos géneros en dos tablas separadas, de modo que ahora nuestra tabla de espectáculos se ve así. Tenemos un ID, un título y un año. Y fíjate que el ID de un espectáculo también puede aparecer aquí en otra tabla llamada géneros, y por mera convención, para mantenernos cuerdos, en lugar de llamarlo ID aquí, lo hemos llamado show_id para denotar que vino de una tabla llamada shows, en plural, pero es un único ID de un espectáculo. Por lo tanto, por convención, los humanos suelen llamarlos nombre de la tabla, menos la S, guion bajo ID. Y entonces la palabra clave aquí o género es comedia o drama o documental o algún otro género también.

Y ahora, esto es un poco sutil, pero el hecho de que este pequeño símbolo aquí, extraído del mundo de las bases de datos, se extienda a tres lugares separados, es una relación uno a muchos, por así decirlo. Puedes tener un espectáculo aquí que se asigna a muchos géneros aquí, o quizá cero, pero son cero o más géneros posibles.

Muy bien. ¿Alguna pregunta por ahora?

Muy bien. Entonces, el verdadero poder entonces, para ser claros, proviene ahora de este tipo de expresividad. Así que ahora, vamos a jugar con algunas otras consultas y características. Pero primero, vamos a darnos un poco más de datos. Resulta que además del archivo llamado title.basics.tsv, IMDB.com pone a nuestra disposición un montón de otros. Hay uno que se llama name.basics.tsv. Y este es uno que tiene información sobre todos los nombres de actores y actrices, directores y escritores y otras personas en el mundo. Así que, por ejemplo, hay un nconst, que es como una constante de nombre o un ID, nm2946516, que pertenece al actor cuyo nombre principal es Claire Foy, la estrella de The Crown. Nació en 1984, y también hay algunos otros campos en ese archivo.

Pero también es jugoso este archivo, title.principals.tsv, y aquí es donde también se pone interesante. En este archivo, fíjate que no hay títulos reales. No hay títulos primarios. No hay nombres humanos reales. En su lugar, solo hay dos identificadores únicos, un tconst y un nconst, que en el lenguaje de IMDB es un identificador de título y un identificador de nombre. Así que, por ejemplo, en una de las filas de este archivo TSV llamado title.principals.tsv, hay una fila que empieza por tt4786824; también tiene nm2946516, y tiene la palabra actriz, lo que implica que si buscas el nm-- el nconst en el archivo de nombres y buscas el tconst en el archivo de títulos, podrás, por transitividad, inferir que Claire Foy está en The Crown.

Esto nos permite tener una relación de muchos a muchos. Una película o un programa puede tener muchos actores, y un actor puede estar en muchos programas, por lo que estamos utilizando una especie de archivo de unión, una tabla de unión, que de alguna manera nos permitirá vincular dos conjuntos de datos diferentes, y hablaremos más sobre eso en un momento. Pero lo que es realmente divertido en IMDB es que también tiene un montón de valoraciones que los humanos han escrito diciendo: Le doy un 10 sobre 10, un 0 sobre 10, etc. Y hacen un seguimiento del número de votos que han obtenido los programas. Y así, en title.ratings.tsv, otro archivo que puedes descargar de IMDB, puedes buscar un tconst determinado, el identificador único de un título, cuál es su calificación promedio y el número de votos.

Y de hecho, si busco esto, por ejemplo, en The Crown, si vuelvo al propio IMDB-- IMDB, busco The Crown, la versión de 2016, verás que efectivamente es un 8,7, que coincide exactamente con lo que tenemos aquí. Pero con el tiempo, ese número va a subir o bajar, porque IMDB también actualiza su conjunto de datos cada día.

Así que además de estos datos, también tenemos la posibilidad de considerar cómo se ve todo esto colectivamente. Así que en este caso aquí, aquí hay otro diagrama. Ahora es más complicado, pero simplemente captura la intuición que se deduciría simplemente leyendo la documentación de IMDB, que define lo siguiente. Resulta que si lees atentamente entre esos archivos, verás que, oh, podemos extraer un montón de programas que van a tener ID, título, año y episodios. Quiero seguir adelante y asociar esos programas con un montón de estrellas. Pero las personas son las entidades del mundo que tienen ID, nombres y nacimiento. Así que ahora las cosas se ponen un poco raras. Centrémonos solo en estas dos tablas aquí.

Este es un diagrama del objetivo que tenemos entre manos, y este es un guion que escribí de antemano. Y en un momento, abriremos