Alors, comment passer des entrées aux sorties ? C'est ce qui se trouve à l'intérieur de ce qu'on appelle une boîte noire, et c'est là qu'intervient l'informatique. Un algorithme. Quelqu'un sait à quoi ça correspond ? C'est quoi un algorithme ? On en entend parler un peu partout en ce moment, notamment dans le cadre des voitures autonomes, Siri et Alexa, etc. Oui ? Une méthode pour faire quelque chose, oui. Dans un contexte de résolution de problèmes, un algorithme est simplement un ensemble d'instructions étape par étape permettant de résoudre un problème. Alors, quel algorithme pourrait fonctionner pour un problème à résoudre ? Prenons cet exemple. C'est un problème d'école classique où vous avez beaucoup de noms et beaucoup de numéros, et ces noms sont normalement classés par ordre alphabétique de A à Z dans un livre comme celui-ci. Et même si la plupart d'entre nous n'utilisent plus vraiment cette technologie, dites-vous que c'est exactement comme sur votre iPhone, votre téléphone Android ou un autre appareil, où tous vos contacts apparaissent les uns en dessous des autres et où vous pouvez les faire défiler de A à Z, ou les rechercher en tapant dans la petite zone de saisie automatique. Comment votre téléphone résout-il ce problème ? Imaginons une approche simple. Je vais consulter la première page et chercher une personne dans l'annuaire. Supposons que cette personne s'appelle Mike Smith, avec comme nom de famille Smith, qui commence par S. Je vais regarder. Il n'est pas là. Je vais tourner la page. Je vais tourner la page. Je vais tourner la page. Voilà un algorithme. C'est un processus étape par étape pour résoudre un problème : trouver Mike Smith. Diriez-vous que cet algorithme est correct ? Oui. Je veux dire, c'est assez lent, c'est assez idiot, dans la mesure où il va me falloir, mon Dieu, une éternité, genre des centaines de pages à tourner pour trouver Mike Smith. Mais s'il est là, je finirai par le trouver grâce à cette approche étape par étape. Et si j'accélérais un peu le processus, juste parce que c'est fastidieux, sinon ? Je compte donc par deux, quatre, six, huit, 10, 12, 14, 16, etc. Est-ce que cet algorithme est plus rapide ? Absolument. Deux fois plus rapide, littéralement. Est-ce qu'il est correct ? LE PUBLIC : Non. DAVID MALAN : Non. Pourquoi ? [VOIX SUPERPOSÉES] DAVID MALAN : Oui, on peut sauter des pages. Je peux avoir de la chance et arriver enfin à la lettre S. Mais tant pis si Mike se trouvait entre deux pages pendant que je les tournais en même temps. Ce n'est donc pas une erreur fatale. Je pourrais corriger cet algorithme en disant simplement que si j'arrive à la section T ou peut-être à Sn au lieu de Sm, il suffit de reculer d'une page environ pour corriger le bug ou l'erreur, pour ainsi dire. Mais au moins, c'est deux fois plus rapide. Mais si cet annuaire fait environ 1 000 pages, il me faudra peut-être encore 500 tours par deux pour trouver Mike Smith. Ça fait beaucoup pour chercher quelqu'un. Mais la plupart d'entre nous, si vous avez déjà utilisé cette technologie, qu'est-ce que vous faisiez, à l'époque ? Vous alliez plus ou moins au milieu s'il n'y avait pas de petites lettres sur le côté pour vous aider à tricher. Donc à peu près au milieu. Je suis dans la section M. Maintenant, les M, bien sûr, signifient que Mike n'est pas de ce côté, qui serait le côté des A. Il est probablement de ce côté vers les Z parce que S, bien sûr, se trouve entre M et Z. Donc à ce stade, je peux littéralement déchirer le problème en deux, jeter la moitié du problème d'une manière très théâtrale et inutile, pour bien montrer que nous sommes maintenant passés d'environ 1 000 pages à quoi ? 500. Et je peux le refaire. Ah, je suis allé un peu trop loin. Je suis maintenant dans la section T, je peux donc déchirer à nouveau le problème en deux, jeter cette moitié, et maintenant je passe de 1 000 à 500 à 250 pages seulement, après seulement deux étapes de ce processus étape par étape. Et si je répète cela encore et encore et encore, j'espère qu'il ne me restera plus, au final, qu'une seule page sur laquelle Mike Smith sera présent ou non. Et je pourrai l'appeler ou arrêter.