Permettez-moi de vous donner un dernier exemple, car nous avons maintenant un type de pouvoir qui nous permet de parler en termes d'adresses mémoires. Je vais aller de l'avant et créer un programme ici, qui rappelle celui de la semaine dernière, appelé répertoire téléphonique dot C, dont le but sera de stocker des informations dans un fichier pour la toute première fois. Je vais utiliser la bibliothèque CS50 pour remettre brièvement les petites roues en place afin de pouvoir facilement obtenir des informations de l'humain.

Mais je vais ensuite utiliser la bibliothèque de chaînes de caractères et les E/S standard, int main void. Et je vais aller de l'avant et faire ce qui suit. Je vais aller de l'avant et ouvrir un fichier appelé fichier, en utilisant une nouvelle fonction appelée fopen, répertoire téléphonique dot CSV, a.

Que se passe-t-il ici ? Eh bien, il s'avère que maintenant que nous connaissons les pointeurs - ou que nous commençons à nous sentir à l'aise avec les pointeurs au cours des prochaines semaines - remarquez que je peux en fait utiliser un nouveau type de données - il est bizarrement en majuscules - tout en majuscules, FILE. Mais je peux dire, donne-moi un pointeur vers un fichier et appelle-le fichier minuscule. Il s'agit donc simplement d'une variable appelée FILE, qui va effectivement, pour les besoins d'aujourd'hui, stocker le contenu d'un fichier pour moi. Ce n'est pas techniquement ce qu'elle fait, mais c'est un modèle mental raisonnable pour le moment.

fopen prend, comme premier argument, le nom du fichier que vous voulez ouvrir. Le deuxième argument est soit r, soit w, soit a - r, pour lire w, pour écrire, a, pour ajouter - afin de continuer à ajouter à un fichier.

Le but est d'écrire un programme de répertoire téléphonique qui me permette de saisir le nom et le numéro d'une personne et de continuer à les ajouter à un fichier texte, comme une base de données que je peux stocker si je veux garder une trace des numéros de téléphone des gens. fopen, par définition, va renvoyer un pointeur vers ce fichier.

Alors, laissez-moi aller de l'avant et faire ce qui suit. Tout d'abord, je vais aller de l'avant et me donner un nom, bien que je n'aie pas vraiment besoin d'utiliser la chaîne en soi. Je vais utiliser char star name. Mais je vais utiliser getString juste pour m'éviter des ennuis, en demandant à l'humain son nom. Je vais ensuite demander à l'homme son numéro en utilisant également getString. Mais je pourrais encore une fois utiliser scanf si je veux. Mais cela va nécessiter plus de vérification des erreurs aujourd'hui.

Et maintenant, je vais aller de l'avant et faire ça. Il s'avère qu'outre la fonction printf, il existe une autre fonction appelée fprintf, qui signifie file printf. Vous pouvez imprimer littéralement dans un fichier. Je vais donc aller de l'avant et imprimer maintenant dans ce fichier, imprimer une chaîne, une virgule, une autre chaîne, puis une nouvelle ligne. Et je vais aller de l'avant et imprimer le nom de quelqu'un, puis son numéro. Et puis, ici, je vais fermer le fichier.

Donc, quelques nouvelles lignes, mais celle-ci en bref - je vais la commenter - ouvrir un fichier, obtenir des chaînes de l'utilisateur, imprimer - c'est-à-dire écrire - des chaînes dans un fichier, puis fermer le fichier. Donc, de nouvelles fonctions, mais assez simples au moins, conceptuellement, je dirais. C'est en termes de ce qui se passe, même si la syntaxe est un peu étrange.

Mais j'ai délibérément choisi ce nom de fichier, phone book dot CSV. Quelqu'un sait-il ce qu'est un CSV ? Oui, des variables séparées par des virgules. C'est comme un format de tableur très - des valeurs séparées par des virgules, c'est un format de tableur très simple que vous pouvez ouvrir dans Excel, ou Apple Numbers, ou d'autres outils de ce type. Je peux donc créer mes propres fichiers CSV un peu comme ça.

Laissez-moi aller de l'avant et créer un répertoire téléphonique. Très bien, cela semble fonctionner. Je vais aller de l'avant et faire dot slash phone book. Et maintenant, il demande un nom, donc je vais faire Emma. Et puis je pense que son numéro la semaine dernière était le 555-0100, entrez. Mais remarquez que si je tape ls, en plus de tous les programmes que nous avons écrits aujourd'hui, il y a aussi ce fichier phone book dot CSV. Et en fait, laissez-moi ouvrir phone book dot CSV. Et il y a le nom et le numéro d'Emma dans un fichier.

Laissez-moi aller de l'avant et l'exécuter une fois de plus et cette fois faire Rodrigo, comme la semaine dernière, 617-555-0101, entrez. Et voilà, son nom vient d'apparaître dans le fichier.

Nous allons en faire un de plus. Donc Brian était le 617-555-0102, entrez. Et le fichier CSV est mis à jour en temps réel. Et maintenant, si je vais effectivement télécharger ce fichier depuis l'IDE en faisant un clic droit dessus, il se retrouve dans mon dossier de téléchargements. Et si je vais de l'avant et que je clique dessus - si vous avez quelque chose comme Numbers ou Microsoft Excel installé et que vous l'utilisez pour la toute première fois - vous verrez qu'il a ouvert une feuille de calcul contenant ces noms et ces numéros.

Donc, si vous avez déjà eu besoin de faire une sorte d'analyse de données de type science des données, vous pouvez en fait écrire du code qui génère les données pour vous dans un format CSV et vous donne ces lignes et colonnes, peut-être familières.