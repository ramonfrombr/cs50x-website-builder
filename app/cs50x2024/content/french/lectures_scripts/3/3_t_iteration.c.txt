Alors allons voir ça dans le contexte. Donc revenons à Mario, où cela ressemble à une pyramide un peu différente de celles que nous avons vues auparavant. Notez qu'elle est alignée à gauche et qu'elle descend vers la droite. En fait, débarrassons-nous du sol et concentrons-nous uniquement sur la pyramide. Comment pourrais-je écrire un code qui implémente ce type de pyramide Mario ?

Eh bien, laissez-moi créer un nouveau fichier appelé Mario.c. Ou en fait, non, soyons encore plus précis cette fois. Appelons ceci iteration.c pour qu'il soit clair qu'il s'agit d'un programme itératif. Et permettez-moi d'inclure cs50.h. Et permettez-moi d'inclure io.h standard. Et permettez-moi d'aller plus loin et de faire int main void. Et là, permettez-moi d'aller de l'avant et de simplement obtenir la hauteur de la pyramide de l'utilisateur, en utilisant notre vieil ami get int.

Je ne vais pas m'embêter, pour aujourd'hui, à faire un do while et à m'assurer que l'humain coopère. Ils doivent simplement se comporter et nous donner un entier positif ici. Et puis je vais aller de l'avant et simplement dessiner une pyramide de cette hauteur en utilisant une fonction qui n'existe pas encore mais qui s'appellera draw.

Je vais implémenter cette fonction draw comme suit, void draw, car elle n'a pas besoin de renvoyer une valeur, conformément à notre discussion de la semaine dernière. Cela va juste imprimer quelque chose. Mais cela va prendre une entrée, comme un nombre n. Ou plutôt, appelons cela H pour hauteur. Cela représente la hauteur de la pyramide à dessiner.

Et comment dessiner une pyramide qui ressemble à ça ? Eh bien, encore une fois, utilisez de l'intuition, comme vous pourriez avoir quatre jeux de problèmes 1, même si la pyramide était un peu plus délicate. Sur la première ligne, je veux imprimer une brique. Sur la deuxième ligne, je veux imprimer deux briques. Sur la troisième ligne, trois, quatrième ligne, quatre. Il s'avère donc qu'il s'agit d'une pyramide plus facile que celle que nous vous avons demandé de faire pour le problème 1. Désolé.

Donc pour int, i prend 0. i est moins que-- en fait, vous savez quoi ? Permettez-moi de le rendre un peu plus clair et plus en adéquation avec mon pseudo-code verbal. Initialisons i à 1 pour la première ligne. Faisons cela tant que i est inférieur ou égal à la hauteur. Et faisons i plus plus. C'est donc la même chose que de commencer à partir de 0, mais juste, surprise-- [RIRES] donc en fait je n'ai pas fait cette erreur, si vous ne l'avez pas vue.

Je vais donc continuer et dire que pour int i prend 1 pour représenter ma première ligne. i est inférieur ou égal à la hauteur, i plus plus. C'est identique, encore une fois, à commencer à partir de 0, mais c'est juste agréable de commencer à compter à partir de 1 parfois, comme dans ce cas, pour la première ligne. Et puis à chaque fois que vous voulez faire quelque chose en deux dimensions, comme dans Mario, il y a de fortes chances que, si vous êtes comme moi, vous ayez probablement eu une boucle imbriquée intérieure, peut-être en l'appelant j, et en faisant j inférieur ou égal à i puis j plus plus. Et je vais l'exécuter pour que ce que je fais soit clair.

Mais à l'intérieur de cette boucle imbriquée, je vais juste imprimer une brique. Et puis ici, je vais imprimer ma nouvelle ligne backslash n. Donc encore une fois, c'est une fonction de dessin simple. Et maintenant, parce qu'il est au bas de mon fichier, je dois mettre son prototype ici, l'une des rares fois où le copier-coller est raisonnable, dirais-je.

Alors laissez-moi faire une itération, compilez OK, dot slash iteration. Et maintenant, on me demande la hauteur. Faisons une pyramide de taille 4. Et le tour est joué, ça a l'air de marcher. Et laissez-moi le faire encore une fois. Je vais essayer, par exemple, une pyramide de hauteur 3. Cela fonctionne. Et permettez-moi d'aller de l'avant et de faire une pyramide de taille 5. Donc ça a l'air de marcher.

Et il s'agit d'une approche très raisonnable et très correcte pour implémenter cette pyramide Mario en utilisant l'itération, c'est-à-dire en utilisant des boucles, dans ce cas, deux boucles. Mais vous savez ce qui est intéressant à propos de cette pyramide de Mario, ainsi que de certaines autres que nous avons vues, c'est qu'il y a cette structure commune, n'est-ce pas ? Et si l'on regarde la pyramide isolément, quelle est la définition d'une pyramide de hauteur 4 ? Eh bien, c'est sans doute une pyramide de hauteur 3 plus 1 rangée supplémentaire.

Quelle est la définition d'une pyramide de hauteur 3 ? Eh bien, c'est une pyramide de hauteur 2 plus 1 rangée supplémentaire. Quelle est la définition d'une pyramide de hauteur 2 ? C'est une pyramide de hauteur 1 avec une rangée supplémentaire. C'est une définition récursive d'un simple objet physique ou virtuel, par laquelle vous pouvez décrire la structure de quelque chose en termes de lui-même.

Maintenant, à un moment donné, j'ai besoin d'un cas particulier, au moins d'une hauteur. Qu'est-ce qu'une pyramide de hauteur 0 ? Rien, n'est-ce pas ? Retournez, quittez ou arrêtez, quel que soit le bon verbiage pour l'algorithme. Tant que vous avez ce qu'on appelle un cas de base, où vous dites manuellement, oh, dans ce cas précis, ne faites rien, et que vous ne vous appelez pas récursivement encore et encore, nous pouvons utiliser ce principe de code qui s'appelle lui-même.