So why is that germane here? Well, this is that thing I showed a couple of weeks ago too, which is representative of RAM, random access memory. It's one of the pieces of hard drive in your macro PC or even phone these days. 

And each of these black chips represents some number of bytes. Odds are, small although it is in reality, it might represent a billion bytes if you have one gigabyte of memory, or maybe even more than that these days. But this little black chip, inside of your Mac, PC, or phone, is where information is stored when you're running software, whether it's on a desktop, or laptop, or mobile device. And we can actually think of this chip as just being divided into a bunch of different individual bytes. In fact, let's just arbitrarily zoom in on it and sort of divide it into rows and columns, and just claim that the top left here is going to be the first byte. This is the second byte, the third byte, and way down here is like the billionth byte of memory in my computer, obviously not drawn to scale, which is to say we can just number these bytes. So one, two, three, four, five, six, seven, eight, or to be really computer science like zero, one, two, three, four, five, six, seven, and so forth. 

So we don't have to know anything about how RAM works, electrically or physically, but let's just stipulate that if you've got some amount of RAM, we can surely think of each byte as having a number. So what does that do for us? Well if you write a program that has a char in it, a character, how big was a char according to the chart a moment ago? So just one byte. So if you allocate a char, called c, or called anything in your program, you will be asking the computer to use just one of these tiny little squares physically inside of your computer's memory. 

By contrast, how about an int-- how big was an int? Four bytes. So if you want to store a number as an integer, you're actually going to consume four of these bytes in your computer's memory instead. And if you're using a double or long, you might use as many of eight of them. So what is inside each of these boxes? There's eight bits here, eight bits here, eight bits here, or maybe it's eight little transistors, or even eight little light bulbs. Whatever they are, they're some way of representing zeros and ones. And that's what each of those boxes represents. 
