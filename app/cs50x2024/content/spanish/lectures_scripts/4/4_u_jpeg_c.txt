Pero permítanme dar un ejemplo final ahora que motivará los retos para la semana que viene. Así que voy a seguir adelante ahora y escribir un programa final cuyo propósito en la vida sea detectar esto. Aquí, delante de mí tengo una foto de Brian [SE RÍE] en formato JPEG. Y tengo un gato en formato GIF, que no funciona en el IDE, pero permíteme seguir adelante y descargarlo localmente, que debería quedar así. Así que es este tipo de hace un par de semanas, pero ambos, uno está en formato GIF, y el otro en JPEG, que si estás familiarizado con los formatos de archivo, son simplemente tipos diferentes de imágenes.

Permíteme seguir adelante y escribir un programa muy rápido que se llama JPEG punto c. Y su propósito en la vida es simplemente verificar si un archivo pasado por su nombre en la línea de comandos es un JPEG o no. Voy a seguir adelante e incluir estándar E/S punto h. Voy a llamar a mi función int main, pero no void. Esta vez voy a utilizar int argc, como la semana pasada, y string argv corchete abierto corchete cerrado.

¿Pero sabes qué? Ya no necesitamos strings. Esto es realmente lo que has estado escribiendo sin saberlo la semana pasada cuando usabas argumentos de línea de comandos o las últimas dos semanas.

Ahora voy a seguir adelante y hacer una rápida verificación de errores. Si argc no es igual a 2, simplemente voy a salir. Quiero que el humano escriba, no solo el nombre del programa, sino también otra palabra más. Luego quiero seguir adelante y abrir el archivo que el humano escribió en el aviso, que sostengo que será la segunda palabra que escriba, por lo que argv 1. Y esta vez quiero leerlo, no adjuntarlo línea por línea, solo quiero leerlo desde el principio. Y la palabra clave para eso es r.

Y luego voy a seguir adelante y hacer una pequeña verificación de errores. Si archivo es igual a igual a nulo, no lo hemos visto antes, pero si fopen, si malloc, si getString devuelve condiciones de error, en realidad devuelven el valor especial nulo. Pero por ahora, permítanme seguir adelante y decir, algo salió mal. Voy a regresar 1. Pero no nos preocuparemos demasiado por ello por ahora.

Así que en este punto, he abierto el archivo. Me he asegurado de que el usuario haya ejecutado el programa con dos palabras en el aviso, ese es nuestro uso de argc. Ahora hagamos esto. Voy a seguir adelante y voy a darme una matriz de 3 bytes. Y voy a usar una función llamada fread, y veremos más de esto en la tarea. Así que esto es deliberadamente rápido. Paso su argumento, la matriz, el número de bytes que quiero leer, cuántas veces quiero leer esos bytes y luego el archivo desde el que quiero leer esos bytes.

Así que eso fue un bocado. Pero en conjunto, estas dos líneas de código leen 3 bytes del archivo. Simplemente lee literalmente los primeros 24 bits o 3 bytes, cada uno de los cuales tiene 8 bits, del archivo. ¿Y por qué estoy haciendo esto? Bueno, resulta que, verifica si los bytes son 0xFF, 0xD8, 0xFF.

Así que una vez más, volviendo al círculo completo al hexadecimal, resulta que en la documentación para el formato de imagen JPEG, los primeros 3 bytes de cualquier JPEG en el mundo, cualquier fotografía que hayas tomado alguna vez con tu cámara, comienza con FF, luego D8, luego FF. Este es el llamado número mágico que los diseñadores del formato JPEG simplemente decidieron usar como una especie de pista al principio del archivo que dice, oye, aquí viene una imagen JPEG.

Entonces, ¿cómo hago esto? En realidad es bastante simple, si los bytes 0 son iguales a igual a 0xFF, literalmente puedo escribir hexadecimal en C, o byte, más bien, y los bytes 1 son iguales a 0xD8, y los bytes 2 son iguales a igual a 0xFF, entonces resulta que probablemente sea un JPEG. Hay algunas condiciones. Las exploraremos en el conjunto de problemas. Así que solo voy a decir que tal vez sea un JPEG. Pero si eso no es cierto, voy a decir con seguridad, no, no es un JPEG si esos primeros 3 bytes no son eso.

Y luego, por razones arcanas, técnicamente necesito hacer que esto sea lo que se llama sin signo, lo que significa que es un número de 0 a 255, en lugar de menos 128 a 127. Pero permítanme hacer un gesto con las manos, solo para que obtengamos este código correcto por ahora.

Voy a seguir adelante y ejecutar JPEG y fracasar miserablemente. ¿Qué hice mal? fopen es el nombre de esa función, lo siento, hacer JPEG, bien. Y ahora voy a ejecutar JPEG en mi imagen de Brian, que está en mi fuente para el directorio en el sitio web del curso. Quizás sea un JPEG.

Y luego voy a seguir adelante y haré JPEG en la fuente para el gato punto GIF, que no, no es un GIF, lo que quiere decir que una vez que tienes la capacidad de expresar punteros, ahora tenemos las capacidades programáticas, no solo para escribir archivos, sino también leerlos.