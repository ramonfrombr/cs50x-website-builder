Bueno, pues entonces esta es exactamente la transición. Voy a seguir adelante, cerrar favorites.py y voy a maximizar el tamaño de mi ventana de terminal aquí. Voy a seguir adelante y ejecutar un programa llamado SQLite3. SQLite3 es un programa de línea de comandos que puedes instalar en tu Mac o PC, ya está en CS50 IDE, que te permite utilizar otro lenguaje llamado SQL de forma interactiva. Tiene una función genial por la que, si tengo este archivo llamado, de forma muy detallada, "Lección 7 de CS520 2019", etcétera, lo copiaré después de resaltarlo. Voy a ejecutar SQLite3 y pondré SQLite3 en .mode CSV. Es una sintaxis extraña, .mode CSV, pero no tienes que utilizar estos comandos muy a menudo. Luego voy a utilizar otro comando, que se llama importar. Y voy a seguir adelante e importar esto en una base de datos.

¿Pero qué base de datos exactamente? Bueno, voy a explicarme y voy a salir de aquí. Vaya. Voy a salir de aquí y ejecutar SQLite3 en nombre de una base de datos. Estoy tratando con programas favoritos, así que tal vez lo llame favorites.db, DB significa base de datos. Voy a seguir adelante y hacer .mode CSV. Voy a hacer ahora .import, citando el nombre del archivo, y las comillas son importantes, porque tiene algunos espacios feos, y voy a importar esto en una tabla, como en una hoja de cálculo, que voy a llamar solo en minúsculas favorites. Y pulsaré Intro. No parece que pase nada ahora.

Pero si vuelvo a mi ventana de terminal y escribo ls, verás que además de mi archivo CSV, favorites.py y src7, que descargué por adelantado con el código de hoy, ahora tengo este archivo llamado favorites.db. Y si vuelvo a ejecutar SQLite, resulta que cuando paso el nombre de esa base de datos, ahora puedo hacer el mismo tipo de preguntas que antes, pero puedo hacerlo con una sintaxis diferente. Puedo seguir adelante y seleccionar todos los títulos de mis favoritos escribiendo este comando, SELECT title FROM favorites; Intro y, ¡voilà!, obtenemos todos los títulos allí.

Supongamos que quiero ordenar estos títulos como antes, o puedo seleccionar título de favoritos, ORDER BY title; finalizando con... oh, lo siento. Los puntos y coma están de vuelta. Entonces voy a seguir adelante y pulsaré aquí. Y verás que ahora está en orden alfabético, y están todas esas oficinas por la primera letra. Ahora, hay algunos errores. Si te desplazas hacia abajo, verás también letras en minúscula, así que también tendríamos que solucionar esa situación. Pero esta parece ser una forma fácil de uso para seleccionar datos que me importan.

Y mira esto. Déjame intentar agrupar cosas juntas. Voy a seguir adelante y seleccionar el título, y voy a seguir adelante y decir contar el número de títulos de esta tabla llamada favoritos. Pero quiero agrupar esas cosas por título. Ahora veremos en un momento lo que esto significa, pero el efecto es lo que mola. Voilá, ahora tengo un resultado muy parecido al de mi programa de Python. Realmente no es tan ordenado como me gustaría, pero fíjate en lo que ha hecho en la parte superior. La primera línea de resultado, si sigo desplazándome, es esta de aquí. A la izquierda está mi título, luego una barra vertical. A la derecha está literalmente el recuento de títulos, cuántos títulos coinciden con eso.

Así que voy a seguir adelante y hacer esto. Voy a seguir adelante y, en primer lugar, limitar esto a los 10 mejores títulos, así que puedo solucionar esto y verlo todo a la vez. Así que aquí tenemos una lista de títulos ordenada alfabéticamente. Pero ahora, supongamos que quiero seguir adelante y cambiarle el nombre a esto. Voy a seguir adelante y decir eso. Déjame seguir adelante y decir, como-- COUNT AS n. Ahora fíjate que el título de este resultado es title, y luego n. Pero la razón por la que hice eso fue para poder hacer esto. Ahora haré ORDER BY n, en orden descendente y luego lo limitaré a los 10 primeros. Intro y, ¡voilà!. Ahora, usando un lenguaje completamente diferente, creo que he obtenido los mismos resultados, excepto por el problema de las minúsculas, al que podemos volver en otro momento. Pero 'The Office' está aquí como el éxito número uno. Luego 'Friends', 19. 'Game of Thrones', 18, etcétera.

Entonces, ¿cuál es la motivación en parte para este nuevo lenguaje llamado SQL? Y solo has visto fragmentos aquí. Nos permite resolver el mismo tipo de problemas mucho más fácilmente, porque no tengo que sentarme y escribir todo un programa de Python, aunque sea más rápido que C. No tengo que escribir un código personalizado solo para responder preguntas sobre mis datos. Y, de hecho, si sigues el camino web dentro de un par de semanas o el camino móvil, ambos ofrecerán soporte para SQL, de modo que si quieres almacenar datos sobre usuarios o información interactiva en una aplicación o en una aplicación de sitio web, SQL va a ser, en última instancia, donde puedes poner esos datos y acceder a ellos más tarde, escribiendo incluso menos código que hoy.