Très bien. Laissez-moi vous exposer l'un des premiers problèmes que nous avons rencontrés pendant la semaine 2. Par exemple, dans string2.c. Dans string2.c, rappelez-vous que je voulais simplement itérer sur tous les caractères d'une chaîne. Et nous avons pu résoudre ce problème assez directement en C en utilisant la notation entre crochets carrés. Il s'avère qu'en Python, nous pouvons faire cela de manière un peu plus succincte. Laissez-moi aller de l'avant et appeler cela string.py.

Je vais aller de l'avant et importer maintenant la bibliothèque get_string de CS50 juste pour rendre la saisie utilisateur un peu plus facile aujourd'hui. Je vais aller de l'avant et obtenir une chaîne de l'utilisateur, en lui demandant ses entrées. Et ensuite, je vais simplement aller de l'avant et imprimer la sortie. Et ensuite, je vais supprimer la nouvelle ligne, juste pour que tout reste sur la même ligne.

Et puis, je veux maintenant parcourir l'entrée de l'utilisateur et l'imprimer caractère par caractère. En C, je faisais cela avec la notation entre crochets carrés et une boucle for très verbeuse. En Python, je peux faire quelque chose d'assez similaire : pour i dans la plage de longueur de s, parce que la longueur de la chaîne est le nombre total de caractères. Si je passe cela comme entrée à la gamme, cela me permet d'itérer une fois pour chaque caractère. Et je peux utiliser la même notation. Je peux imprimer les crochets s i dans Python. Et laissez-moi me débarrasser des nouvelles lignes pour n'en avoir qu'une à la toute fin.

Donc encore une fois, je tape rapidement. Mais la portée ne compte qu'un certain nombre de fois. Combien de fois ? Autant de caractères qu'il y a, comme la longueur de la chaîne, et à chaque itération, imprimez le ième caractère de s. Laissez-moi aller de l'avant et exécuter cela - python de string.py. Laissez-moi taper, par exemple -- oups. Refais ça.

Après avoir vu l'invite de saisie, laissez-moi taper le nom d'Emma. Et voilà le résultat, n'est-ce pas ? Il semble identique, même si je l'imprime techniquement caractère par caractère. Mais Python est plutôt sophistiqué. Et vous n'avez pas besoin de tous ces trucs mécaniques, comme compter les chiffres et la notation entre crochets carrés.

Si vous voulez parcourir une chaîne caractère par caractère, vous pouvez simplement dire pour c dans s, imprimer c. Et il trouvera comment obtenir le caractère que vous souhaitez. Techniquement, laissez-moi remplacer la nouvelle ligne. Mais c'est beaucoup plus agréable maintenant. Maintenant, si je veux taper la même chose, hop, ça marche pareil, moins de code, plus de travail fait, retour à d'autres choses que j'ai vraiment envie de faire à la place.