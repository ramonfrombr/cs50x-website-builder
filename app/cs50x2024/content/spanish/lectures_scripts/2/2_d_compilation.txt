¿Qué ocurre después de eso? Bueno, la compilación, aunque es la palabra que usamos y que seguiremos usando para describir el paso del código fuente al código máquina, es en realidad un paso más preciso que eso. Cuando una computadora, cuando se compila un programa, técnicamente comienza así después de haber sido preprocesado; nuevamente, ese fue el paso 1.

Luego, un compilador, como Clang, convierte este código en algo que parece aún más aterrador que C. Esto es algo llamado código ensamblador, y puedes tomar cursos completos sobre el código ensamblador. Y no fue hace muchas décadas que los humanos programaban manualmente códigos que se parecían a esto, por lo que no eran solo ceros y unos. Pero, Dios mío, C se ve bastante bien ahora, si este era el lenguaje alternativo en aquel entonces.

Así que aquí hay un ejemplo de lenguaje ensamblador. Pero aunque parezca bastante arcano, si resalto en amarillo algunas características, hay algunas cosas que resultan familiares. Aquí arriba está el principal. Obtener cadena está aquí abajo. Printf está aquí abajo. Entonces, cuando Clang compila tu código, pasa del código fuente en C a este código ensamblador de paso intermedio, y eso está solo un poco más cerca de lo que realmente entiende la CPU, el cerebro de tu computadora.

De hecho, lo que está resaltado ahora en amarillo son las llamadas instrucciones. Entonces, si alguna vez has oído hablar de Intel o AMD o un montón de empresas que fabrican CPU, unidades centrales de procesamiento, los cerebros de una computadora, lo que esas CPU entienden son estas operaciones de muy, muy bajo nivel como esta. Y estas se relacionan con mover cosas en la memoria y copiar cosas, leer cosas y poner cosas en la pantalla.