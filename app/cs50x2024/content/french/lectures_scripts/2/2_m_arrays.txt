Donc tout se concentre sur la justesse et le style, et c'est effectivement ce que chaque ensemble de problèmes ici va avoir comme élément. Est-ce que ça fonctionne correctement et est-ce que c'est bien stylé ? Mais le troisième axe de qualité, quand il s'agit d'écrire des logiciels, pas seulement pour CS50 mais vraiment en général avec la programmation dans le monde réel, est cette notion de design. Et le design n'est pas tout à fait quelque chose que nous pouvons encore évaluer avec un logiciel, et dire que vous l'avez bien conçu ou que vous ne l'avez pas bien conçu, c'est plutôt une mesure subjective. Et là aussi, des personnes raisonnables peuvent être en désaccord.

Donc, ce sur quoi nous allons nous concentrer, pas seulement aujourd'hui mais dans les semaines à venir, est également le processus d'écriture de logiciels bien conçus et de prise de décisions plus intelligentes pour non seulement résoudre le problème, mais aussi le résoudre correctement. Et c'est ce que font tous les jours les ingénieurs logiciels à temps plein chez Facebook, Google, Microsoft et d'autres entreprises du monde entier, surtout lorsqu'ils ont d'énormes quantités de données et de très nombreux utilisateurs. Chaque décision de conception qu'ils prennent compte et peut coûter de l'argent, des cycles de CPU ou de la mémoire. Et en effet, pensez à la semaine zéro, trouver Mike Smith était possible de trois manières différentes, mais la troisième, la division et la conquête, était de loin la plus efficace. Elle était mieux conçue que les deux premières.