Alors, comment est-ce que je m'y prends pour écrire mon tout premier programme en C, tout comme la semaine dernière, nous écrivions notre tout premier programme en Scratch ? Eh bien, considérez que la première chose que nous avons faite dans Scratch était d'ouvrir un programme, un outil: scratch.mit.edu. Vous pouvez programmer, en fait, sur votre propre ordinateur, quel que soit le système d'exploitation que vous utilisez. Mais franchement, cela a tendance à être vraiment agaçant et très sujet aux maux de tête de l'assistance technique si nous essayons tous d'installer les logiciels requis sur tous nos ordinateurs individuels. Invariablement, nous avons tous des versions différentes des choses, et nos ordinateurs ne fonctionnent pas tout à fait de la même manière. Donc, dans le cours CS50, nous utilisons un outil basé sur le cloud: appelé Visual Studio Code, et qui se trouve à cs50.dev. Et vous l'utiliserez pour votre premier problème cette semaine. Il s'agit d'un environnement de programmation similaire dans l'esprit à Scratch, mais qui n'utilise pas Scratch. Il n'utilise pas de pièces de puzzle. Il utilise plutôt C, ce langage textuel que nous commençons à voir maintenant. Pour utiliser cet outil, il est nécessaire de créer un compte sur github.com, que est une plateforme utilisée par les programmeurs, que nous offre de nombreux outils différents. Alors, après avoir créé un compte sur github.com, j'utiliserai mes informations d'identification github, c'est-à-dire mon e-mail et mon mot de passe, pour accéder à cs50.dev.

Il y a donc deux parties principales dans cet environnement de programmation. En haut, ici, ce sera simplement l'endroit où j'écrirai mon code réel. Littéralement, dans un instant, je vais cliquer sur ce plus et je vais créer un nouveau fichier. Et je vais commencer à écrire du code dans ce fichier et à l'enregistrer. Et puis, dans la moitié inférieure de cet environnement de programmation, il y a ce que nous allons commencer à appeler une fenêtre de terminal. Une fenêtre de terminal est une sorte d'interface à l'ancienne par laquelle vous pouvez exécuter des commandes en les tapant littéralement à une invite, puis en appuyant sur Entrée. Donc, contrairement à Scratch — et franchement, contrairement aux ordinateurs de nos jours — où vous pointez, cliquez, etc., en interagissant avec une interface utilisateur graphique, une grande partie de notre programmation impliquera dès le départ de taper des commandes. Rendons donc cela plus réel. L'objectif maintenant, encore une fois, est de simplement implémenter un programme en C qui dit bonjour au monde, ce qui sera fonctionnellement similaire au programme Scratch à gauche. Mais nous devons maintenant l'implémenter en utilisant le langage à droite.
