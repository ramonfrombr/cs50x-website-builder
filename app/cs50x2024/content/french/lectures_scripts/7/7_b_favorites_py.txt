[MUSIQUE] DAVID MALAN : Très bien. Donc, voici CS50, et aujourd'hui, nous continuons notre regard sur Python, mais nous présentons également un autre langage. Celui-ci s'appelle SQL, ou langage de requête structuré, et il va nous permettre de résoudre des problèmes différents ainsi que de mieux résoudre des problèmes anciens. Mais pour ce faire, essayons dans un premier temps de motiver certains problèmes.

Donc ceci, bien sûr, n'est qu'un exemple d'une feuille de calcul. Il y a de fortes chances que vous les utilisiez assez fréquemment, que ce soit sous la forme de feuilles de calcul Google, d'Excel ou de nombres Apple, etc. Et c'est en fait la forme la plus simple de ce que nous pourrions appeler une base de données, juste une sorte d'application qui stocke beaucoup de données. Et il y a de fortes chances que si vous avez déjà pris des inscriptions pour un groupe d'étudiants ou demandé aux gens de s'inscrire ou de remplir un formulaire ou une enquête, vous avez probablement utilisé Google Forms pour mettre vos données dans une feuille de calcul Google. Et nous avons donc pensé que nous commencerions là aujourd'hui, un problème représentatif dans lequel vous pourriez vouloir collecter de nombreuses données auprès des utilisateurs, puis en faire quelque chose, mais idéalement de manière plus puissante que vous ne pourriez le faire en tant qu'humain par vous-même.

Nous avons donc mis en place un formulaire Google qui pose tout simplement quelques questions aujourd'hui. Quelles sont vos émissions de télévision préférées ? Et nous vous demandons le titre de votre émission préférée et le genre ou les genres dans lesquels cette émission se classe. Alors si cela ne vous dérange pas, allez-y, ouvrez cette URL ici sur votre ordinateur portable ou votre téléphone. Si vous n'en avez pas, ce n'est pas grave. Vous pouvez utiliser la personne à côté de vous, si vous me le permettez. Et ne prenez qu'un moment pour aller à cette URL et répondre à ces deux questions. Quel est le titre de votre émission télévisée préférée et dans quel genre ou genres se trouve-t-elle ? Émissions de télévision préférées.

Et lorsque vous accédez à cette URL, vous vous retrouverez à nouveau sur ce formulaire, vous demandant votre titre et votre émission préférée. Donc, à en juger par mon propre écran ici, nous avons environ 62 réponses, 74 réponses déjà reçues, nous pouvons donc suivre cela en direct. Donc 111 réponses jusqu'à présent. Ça fait beaucoup d'émissions télévisées préférées. Ce nombre est en constante augmentation. 169, jusqu'à 191. Continuez comme ça. Un par personne suffit. Cela nous donnera plus que suffisamment de données. 246.

Nous lui donnerons encore quelques secondes, mais il suffit de dire qu'il s'agit de beaucoup de données. Et si l'étape suivante de ce processus consistait pour moi à analyser les données parce que je suis curieux de savoir quelle est l'émission la plus populaire sur le campus ou si je voulais faire un autre travail d'analyse à ce sujet, il serait utile d'avoir toutes ces données, pas dans le Interface propriétaire de Google Form, mais au format Google Spreadsheet avec des lignes et des colonnes, un format que vous connaissez probablement assez bien. Nous laisserons donc ce compteur continuer à monter et à monter, et je vais aller de l'avant et cliquer sur les réponses. Et si nous le voulions vraiment, nous pourrions regarder à travers - The Office est là-haut, suivi de Games of Thrones, Friends, OK. Peut-être assez prévisible ici.

Laissez-moi aller de l'avant et cliquer sur cette icône, qui va ouvrir la version Google Spreadsheet de ceci. Et vous verrez qu'il y a trois colonnes par défaut.

[RIRES]

Oh, c'est drôle.

[APPLAUDISSEMENTS]

Je vous remercie. Je vous remercie.

D'accord bien joué. Maintenant, vous verrez que par défaut, nous avons trois colonnes. Horodatage, Google Forms ne fait automatiquement que horodater la soumission du formulaire. Le titre vient de la première question. Les genres viennent de la deuxième question. Et si nous continuions à faire défiler et à faire défiler, il y a de fortes chances que nous voyions de plus en plus de lignes. Supposons que nous ayons déjà suffisamment de ces lignes et comment pourrions-nous analyser les données ? Eh bien, si vous êtes assez expert avec Google Spreadsheets, Excel ou Numbers, vous pouvez peut-être utiliser certaines fonctions intégrées à ces programmes ou vous pouvez faire un Command-F ou Control-F et rechercher l'émission préférée que vous recherchez pour essayer d'exécuter des nombres.

Mais nous avons des capacités de programmation de nos jours. Et si vous n'avez pas encore utilisé cette fonctionnalité, si vous accédez au menu Fichier de Google Spreadsheet. Vous pouvez aller dans télécharger et vous pouvez télécharger vos données dans plusieurs formats. Et le plus utile que je proposerais pour le moment sera celui-ci, les valeurs séparées par des virgules ou CSV. Et nous avons déjà vu ça. En fait, vous l'avez déjà généré. Donc si je vais de l'avant et fais ça, il a téléchargé assez rapidement un fichier CSV que je voulais vraiment ouvrir dans Excel ou Apple Numbers, etc. Mais faisons autre chose avec ça, et allons-y, mettons-le dedans, par exemple, mon IDE afin que je puisse réellement faire quelque chose avec.

Je vais récupérer mon fichier téléchargé ici. Et je vais aller de l'avant et le faire glisser dans l'IDE. Et donc maintenant, vous verrez un tas de fichiers ici. Laissez-moi mettre... oups. Laissez-moi mettre ceci directement à la racine de mon dossier. Et nous verrons ce fichier ici. Et si je double-clique dessus, vous verrez exactement les mêmes données, mais au format CSV. Cela se ressemble donc, mais des virgules séparent les valeurs. Et Google Spreadsheets l'a fait pour nous automatiquement.

Écrivons maintenant un programme qui analyse ces données et voyons si nous ne pouvons pas donner un sens à certaines des valeurs les plus populaires qui s'y trouvent. Laissez-moi aller de l'avant et fermer ceci, ouvrir un nouveau fichier, et je vais aller de l'avant et l'appeler, par exemple, favoris.py, puisque le but est de déterminer les favoris de chacun ici. Et permettez-moi d'utiliser une syntaxe de la semaine dernière que vous connaissez peut-être maintenant grâce à l'ensemble P 6. Laissez-moi aller de l'avant et importer CSV, le module, afin d'avoir accès à cette bibliothèque de fonctionnalités. Alors laissez-moi faire cela avec Open. Et puis je vais aller de l'avant et ouvrir ce fichier, et je pourrais le renommer, mais vous savez, je peux aussi simplement saisir le nom complet du fichier de cette façon. C'est un peu excessif, mais je vais aller de l'avant et le coller en mode lecture. Et cela me donne un fichier. Laissez-moi aller de l'avant et effectuer un zoom arrière juste un peu là-bas.

Et une fois que j'ai ce fichier, je peux le jeter dans un lecteur de dict, par exemple, pour faciliter la lecture du CSV. Le lecteur obtient donc CSV.DictReader. Transmettez ce fichier. Et puis après cela, j'ai la possibilité, maintenant, d'itérer sur chaque ligne comme ceci, tout comme vous l'avez probablement fait pour l'ADN ou un ou plusieurs autres problèmes également. Maintenant, juste pour vérifier, permettez-moi d'aller de l'avant et d'imprimer chacun des titres de la ligne. Je ne vais donc rien voir de nouveau ici, mais ce sera une petite vérification pour être sûr que j'écris le code correct. Alors exécutez Python de favorites.py, et voilà, fwoom, il y a toutes les données. Donc The Office est à la fois au début et à la fin ici, semble-t-il.

Très bien, c'est très bien, un joli tremplin, mais commençons à analyser ces données, cette fois en utilisant du code. Alors permettez-moi de dire ceci. Supposons que je veuille suivre et déterminer quelle est l'émission la plus populaire. J'ai donc ce gros fichier CSV avec titre, titre, titre, titre. Invariablement, il va y avoir des doublons. Beaucoup d'entre vous aiment probablement The Office ou une autre émission, et il serait donc bien d'agréger ces données. Quelle pourrait être une structure de données utile dans Python grâce à laquelle pour chaque ligne nous pouvons utiliser cette structure de données pour faire simplement l'équivalent de 1, 2, 3 et compter chacune des occurrences de ces titres ?

N'importe quel... OK, j'ai entendu une table de hachage, mais plus correctement dans Python ? Un dictionnaire. Ainsi, un dictionnaire est en quelque sorte le couteau suisse des structures de données pour beaucoup de gens dans la mesure où il vous permet de stocker des clés et des valeurs, et ces clés peuvent être des chaînes, et ces valeurs peuvent être tout ce que vous voulez, y compris, par exemple, dans ce cas, nombres, comme un compteur, c'est une structure de données vraiment polyvalente lorsque vous voulez simplement jeter des données dans une structure de données et en faire quelque chose. Alors laissez-moi aller de l'avant et me donner un dictionnaire en haut du fichier. Je peux le faire de plusieurs manières, et si mon objectif est