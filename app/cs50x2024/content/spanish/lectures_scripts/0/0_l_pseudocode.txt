Hay un pseudocódigo. Y nadie tiene una definición formal para esto. El pseudocódigo es una sintaxis tipo código que escribes en inglés o en tu propio idioma hablado que representa tus ideas, pero de manera sucinta. Por lo que podría proponer que este algoritmo para encontrar a Mike Smith pueda escribirse en sintaxis de pseudocódigo tipo inglés como la que sigue. Paso uno, agarra la guía telefónica, que era de hecho lo primero que hice. Paso dos, abre la guía telefónica por la mitad, que es lo siguiente que hice. El paso tres podría ser mirar la página para ver si alguien está ahí y si Smith está en esa página, ¿qué quiero hacer? Bueno, mi código se verá algo diferente ahora y voy a sangrarlo intencionalmente para dejar en claro que aquí hay algún tipo de dependencia. Voy a seguir adelante y al paso cinco y a llamar a Mike solo si la línea cuatro es verdadera, que esté en la página. De lo contrario, si Smith está antes en el libro, a la izquierda, por así decirlo, voy a seguir adelante y a abrir a la mitad de la mitad izquierda del libro y luego, ¿qué es lo que probablemente querré hacer después? AUDIENCIA: [INAUDIBLE] DAVID MALAN: Así que, sí, esto, finalmente. ¿Cómo hago esto una y otra vez? Bueno, ya tengo un código, por así decirlo, en la línea tres que lo hace. Mira la página y luego toma la decisión de ir a la izquierda o a la derecha. Entonces, solo diré que regreses a la línea tres después de ir a la mitad de la mitad izquierda del libro si Smith está efectivamente antes en el libro. El otro escenario, por supuesto, es el opuesto. Entonces, si Smith está más adelante en el libro, abramos a la mitad de la mitad derecha del libro y luego vayamos a la línea tres. De lo contrario, hay un cuarto escenario o caso posible. ¿Qué más podría pasar en este algoritmo? AUDIENCIA: [INAUDIBLE] DAVID MALAN: No está ahí. Y por eso probablemente quiera anticipar eso y simplemente decir salir si, de hecho, no está en la página, a la izquierda de la página o a la derecha de la página. Entonces, hay una única manera de expresar este pseudocódigo aunque ahora solo en esta sintaxis tipo inglés. Pero solo en esta sintaxis hay algunos puntos en común, algunas características que veremos durante las próximas semanas no solo en pseudocódigo, sino en un lenguaje llamado Scratch, un lenguaje llamado C, un lenguaje llamado Python y más. Hay ciertas construcciones en programación, programación procedimental, por así decirlo, que van a ser comunes entre todos estos lenguajes. Aquí resaltadas en amarillo está lo que, de hoy en adelante, simplemente llamaremos funciones. Estos son verbos o acciones que simplemente le dicen a la computadora, o en este caso, al humano, qué hacer. Entonces esas son funciones. Ahora resaltadas en amarillo están lo que vamos a llamar condiciones. Estas son ramificaciones, una especie de bifurcaciones en el camino para que puedas hacer esto o aquello o quizás también esta otra cosa. Pero para tomar esas decisiones tienes que hacerte una pregunta. Y esas preguntas, en ciencias de la computación, se llaman expresiones booleanas, que llevan el nombre de un matemático llamado Boole. Y una expresión booleana, resaltada ahora en amarillo, son solo preguntas que tienen respuestas de sí o no o, por así decirlo, respuestas verdaderas o falsas o, diablos, ahora que sabemos binario, respuestas de uno o cero. Entonces, incluso en el código vemos un indicio de por qué unos y ceros son útiles. Por último, está esta cosa aquí. Regresa a la línea tres. La hemos usado en dos lugares. Eso se refiere a algo que llamaremos un bucle. Es un ciclo que hace algo una y otra vez.