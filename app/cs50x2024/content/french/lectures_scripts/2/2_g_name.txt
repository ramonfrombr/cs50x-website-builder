D'accord. Alors, au-delà de cela, je suis sûr que vous avez déjà rencontré, après seulement une semaine, des bogues dans votre logiciel. Et en fait, l'une des plus grandes compétences que vous puissiez acquérir en classe de programmation n'est pas seulement de savoir écrire du code, mais aussi de déboguer le code, probablement votre propre code. Et si vous vous êtes déjà demandé d'où vient cette expression, cette notion de débogage, cela fait en réalité partie de la mythologie.

C'est donc en réalité un cahier tenu par Grace Hopper, une informaticienne très célèbre, qui travaillait il y a de nombreuses années avec des collègues sur ce qu'on appelait le système Mark 2. Si vous avez déjà traversé le Harvard Science Center, il y a une grande partie d'une machine au rez-de-chaussée du Science Center. C'est le Mark 1, le précurseur.

Et bien, à un moment donné, on a découvert que le Mark 2 avait littéralement un insecte à l'intérieur, ce qui provoquait un problème. Une sorte de papillon de nuit. Et Grace Hopper a fait cet enregistrement ici, si on zoome, le premier vrai cas d'insecte trouvé. Et même si d'autres personnes avaient déjà utilisé l'expression « insecte » pour désigner des erreurs ou des problèmes dans des systèmes, c'est vraiment en quelque sorte la tradition à laquelle les gens en informatique se réfèrent.

Donc, les bogues ne sont que des erreurs dans les programmes, des choses que vous n'aviez sûrement pas prévues. Et nous allons voir aujourd'hui comment nous pouvons vous donner plus de moyens, bien plus que la semaine dernière, pour résoudre vos propres problèmes et déboguer votre logiciel.