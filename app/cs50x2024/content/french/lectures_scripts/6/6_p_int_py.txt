D'accord. Nous revoilà. Et regardons maintenant en arrière, où nous avons commencé cette conversation sur la comparaison entre C et Python. Et rappelons-nous qu'un des premiers exemples que nous avons fait aujourd'hui comprenait des chaînes de caractères et l'utilisation de la bibliothèque CS50. Mais la bibliothèque CS50, nous allons très rapidement l'enlever, en effet, juste après quelques problèmes que vous allez résoudre dans l'énoncé de problème 6. Mais nous allons voir maintenant à quel point cela peut être fait facilement.

Il s'avère qu'en Python, vous n'avez pas besoin d'utiliser get_string ou la bibliothèque CS50 elle-même, car il existe en fait une fonction appelée tout simplement input. Et en effet, je peux me débarrasser de get_string, le remplacer par cette fonction appelée input, et en réalité stocker la valeur de retour dans s. Et dans la plupart des cas, cela se comportera de façon identique à get_string.

Si je continue et exécute Python sur string.py, je peux aller de l'avant et saisir mon nom. Et cela fonctionne toujours comme prévu. Mais je dois maintenant faire attention car input, par définition, dans la documentation de Python, renvoie toujours une chaîne de caractères, ce qui signifie que si je veux me débarrasser de get_int et peut-être get_float, une autre fonction que vous voudrez peut-être utiliser pour l'énoncé de problème 6, et utiliser input à la place, il ne suffit plus d'appeler input et de stocker la réponse dans une variable appelée age. Pourquoi ? Même si je n'ai pas spécifié le type de age sur la ligne 1, quel sera son type apparemment, comme je viens de le définir ?

L'AUDITOIRE : Cela va être une chaîne de caractères.

DAVID MALAN : Cela va être une chaîne de caractères. Input, par définition en Python, renvoie une chaîne de caractères. Donc, si vous voulez la convertir en entier, vous devez savoir comment faire. Et la façon la plus simple de le faire est de la convertir avec une fonction appelée int. C'est en fait très similaire au cast en C. Mais c'est un peu en arrière.

En C, vous diriez parenthèse gauche int parenthèse droite. En Python, vous dites int parenthèse ouvrante, peu importe ce que vous voulez convertir, puis parenthèse fermante. Vous l'appelez comme une fonction réelle. Mais cela va être un peu fragile. Il s'avère que si vous transmettez aveuglément l'entrée de l'utilisateur à cette fonction int, si cela ne ressemble pas à un int, de mauvaises choses vont se produire. Vous allez voir une sorte de message de suivi ou d'erreur à l'écran.

C'est pourquoi, pour cette première semaine, nous avons utilisé la bibliothèque CS50 et get_int, get_string et get_float simplement parce qu'il est un peu plus difficile d'utiliser la bibliothèque pour maltraiter accidentellement les entrées. Mais vous n'avez pas besoin de l'utiliser. Et vous n'aurez pas besoin de l'utiliser après une semaine environ.