Maintenant que j'ai posé ma question à l'utilisateur à l'aide de la fonction get_string, il faut que je fasse quelque chose avec la réponse. Et en C, voici la marche à suivre. Il faut vous créer une variable, qui est un espace de stockage pour une valeur. Je vais poursuivre et l'appeler réponse, comme Scratch l'a fait. Mais en C, je peux l'appeler comme je veux. Je pourrais l'appeler ABC ou XYZ (IKS-I GREC-ZED). Aucun de ces noms n'est pas très descriptif, je vais donc l'appeler réponse. Vous pouvez utiliser n'importe quel mot.

Mais C est un peu spécial, et il faut être très explicite sur le type de valeur que vous obtenez et, par conséquent, que vous stockez dans la variable. Alors, à gauche du nom de la variable, je dois indiquer à l'ordinateur que je dois stocker une chaîne de caractères. Et nous verrons plus tard qu'il existe d'autres types de valeurs. Comme les nombres par exemple, mais pour l'instant, nous allons simplement stocker une chaîne de caractères, c'est à dire, une string.

Et il manque une chose à cette ligne de code. Le point-virgule, qui indique la fin de la pensée, et c'était une grande pensée, mais un point-virgule termine cette pensée.

Maintenant, ce signe égal est un peu différent de l'algèbre, si vous repensez à vos cours de mathématiques, où vous diriez peut-être x égale y. Quand x égale y, cela signifie que x est exactement comme y. Mais ici, le signe égal dans les langages de programmation est généralement un type de mouvement de droite à gauche. Ce signe égal ne signifie pas techniquement égal. Il signifie attribuer, ou opérateur d'affectation. Déplacer quelque chose de droite à gauche. Donc si cette fonction get_string, comme la fonction demander, demande à l'utilisateur son nom et renvoie une valeur, vous voulez placer ce nom dans une variable appelée réponse, de droite à gauche. Donc de la même manière que nous l'avons écrit de droite à gauche, vous devez penser à son exécution de droite à gauche.