Muy bien. Sin embargo, permítanme abordar uno de los primeros problemas que encontramos en la semana 2. Y ese fue, por ejemplo, en string2.c. En string2.c, recuerden que simplemente quería iterar sobre todos los caracteres en una cadena. Y este problema lo pudimos resolver de manera bastante sencilla en C usando la notación de corchetes; resulta que en Python podemos hacerlo de manera un poco más sucinta. Déjenme continuar y llamar esto string.py.

Voy a seguir adelante y ahora importar desde la biblioteca CS50 la biblioteca get_string solo para que la entrada del usuario sea un poco más fácil hoy. Continuaré y obtendré una cadena del usuario, pidiéndole sus entradas. Y luego, simplemente continuaré e imprimiré la salida. Y luego, voy a suprimir la nueva línea, solo para mantener todo en la misma línea.

Y luego, quiero iterar ahora sobre la entrada del usuario e imprimirla carácter por carácter. Bueno, en C, hice esto con la notación de corchetes y un bucle for muy detallado. En Python, puedo hacer algo bastante similar: para i en el rango de longitud de s, porque la longitud de la cadena es el número total de caracteres. Si paso eso como entrada al rango, eso me permite iterar una vez por cada carácter. Y puedo usar la misma notación. Puedo imprimir s corchete i en Python. Y permítanme deshacerme de las nuevas líneas para que solo tenga una al final.

Entonces, de nuevo, estoy escribiendo rápidamente. Pero el rango solo cuenta algunas veces. ¿Cuántas veces? Sin embargo, muchos caracteres hay, según la longitud de la cadena, y en cada iteración, imprima el i-ésimo carácter de s. Déjenme continuar y ejecutar esto: python de string.py. Déjenme escribir, por ejemplo, ¡vaya! Hazlo de nuevo.

Después de ver el indicador de entrada, déjenme escribir el nombre de Emma. Y ahí está la salida, ¿verdad? Se ve igual, aunque técnicamente lo estoy imprimiendo carácter por carácter. Pero Python es algo elegante. Y no necesitas todas estas cosas mecánicas, como contar números y notación de corchetes.

Si quiere iterar sobre una cadena carácter por carácter, puede simplemente decir for c in s, print c. Y se encargará de averiguar cómo obtener el carácter que desea. Técnicamente, déjenme anular la nueva línea. Pero esto es mucho más agradable ahora. Ahora, si quiero escribir lo mismo, ¡voilà!, funciona igual, menos código, haciendo más trabajo, volviendo a otras cosas que realmente quiero hacer en su lugar.