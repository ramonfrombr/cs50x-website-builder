Bueno, ¿qué hay de los tipos? Incluso este mundo se vuelve un poco más simple. Estos fueron los tipos de datos en los que nos enfocamos en C. Pero muchos de ellos ahora desaparecen en Python. Todavía tenemos bool, como las mayúsculas true y false. Todavía tenemos ints y floats, resulta. Pero también tenemos strs, que es solo una versión más corta de la palabra string.

Y mientras que en C definitivamente teníamos la noción, el concepto de cadenas, pero pretendíamos que existía la palabra cadena, gracias a la biblioteca CS50, en Python, en realidad hay un tipo de datos llamado str, puedes simplemente llamarlo string, que nos da incluso más funcionalidad que la biblioteca CS50. Así que eso fue solo un trampolín hacia lo que existe aquí.

Y también hay otros tipos de datos en Python. De hecho, algunos de ellos están justo aquí. Y hoy jugaremos con algunos de estos tipos de datos, porque si piensas en lo que hicimos las últimas dos o tres semanas presentando no solo matrices, sino luego vinculados a listas y tablas hash y árboles y tris y pilas y Qs, todo este conjunto de herramientas de estructuras de datos sobre las que empezamos a hablar, en Python, maravillosamente, si quieres una tabla hash, viene con el idioma. Si quieres una lista enlazada, viene con el idioma, no más punteros, no más creación de esas estructuras de datos de bajo nivel tú mismo. Puedes usarlas nada más sacarlas de la caja.

Así que aquí hay una lista, entonces, para resumir algunos de los tipos de datos más poderosos que obtenemos en Python que no teníamos en C, a menos que los escribiéramos nosotros mismos. Puedes tener un rango, como acabamos de ver, que es solo una secuencia de números, como 0, 1, 2 o cualquier otra cosa. Podemos tener una lista, que es una secuencia de valores mutables, que es una forma elegante de decir que son valores que se pueden cambiar. Mutable, como mutación, solo significa que puedes cambiar esos valores. Por lo tanto, puedes agregar, eliminar y reemplazar los valores en la lista inicial.

Una lista, entonces, en Python es como una matriz en C, pero que puede aumentar o disminuir automáticamente de tamaño. Por lo tanto, ya no tienes que hacer todas esas cosas de malloc o realloc. Una tupla es una secuencia de valores inmutables, que es una forma elegante de decir una secuencia de valores que una vez que los pones allí, no puedes cambiarlos. Por lo tanto, esto a veces es útil para, por ejemplo, coordenadas, x coma y, para coordenadas GPS o similares. Pero cuando sabes que no vas a cambiar los valores, puedes usar una tupla.

Dict o diccionario es una colección de pares clave-valor. Y este es el tipo de datos abstracto, para tomar prestada una palabra de hace un par de semanas, que debajo de la campana se implementa con lo que llamamos, y construimos para Pset5, una tabla hash. Entonces Python viene con tablas hash. Se llaman diccionarios, abreviados dict en el idioma. Y esto simplemente te permitirá, si quieres una tabla hash, simplemente declararla, como lo harías con un int o un float. Ya no tienes que implementar eso por tu cuenta.

Y luego, por último, al menos entre los que veremos hoy, un conjunto es una colección de valores únicos. Es posible que recuerdes este término de una clase de matemáticas. Entonces, esta es solo una colección de valores. Pero incluso si pones varias copias del mismo valor, eliminará los duplicados por ti, lo que a veces es solo conveniencia.

Y también hay otros tipos de datos. Pero eso es más que suficiente para comenzar hoy. De hecho, todo lo que vamos a ver hoy es en última instancia derivado de la documentación. Y la documentación de Python es muy completa. Pero negaré que no sea muy fácil de usar.

Y entonces, a partir de esta semana y en adelante, en cualquier idioma, como Google será tu amigo. Y a veces Stack Overflow será tu amigo. Y sus profesores en este curso, sin duda, serán sus amigos, no en el sentido de que deberían comenzar a buscar en Google, cómo implementar el problema 6, sino más bien, ¿cómo iterar sobre los valores en Python?

O ¿cómo se convierte una cadena en minúsculas? Ese tipo de bloques de construcción que, francamente, no son intelectualmente interesantes de memorizar de nuestra clase, simplemente puedes sacarlos de la estantería o de Google cuando los necesites, es exactamente como personas como Brian y yo y [INAUDIBLE] y Rodrigo programan todos los días.

No memorizas necesariamente todo en la documentación. Pero sabes cómo encontrarlo. Y, de hecho, uno de los objetivos de esta clase es quitar la última de esas ruedas de entrenamiento y hacer que aprendas cosas nuevas por tu cuenta, después de haberlo hecho con la estructura de apoyo de la clase en sí.