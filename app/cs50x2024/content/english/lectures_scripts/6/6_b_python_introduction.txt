[MUSIC PLAYING] DAVID MALAN: All right. This is CS50. Welcome back to all. And this is one of those rare days, where, in just a couple of hours, you'll be able to say that you've learned a new language. Or if you have a little bit of Python background already, you'll be able to say hopefully that you know it all the more, because even though we've spent the past several weeks focusing on C, one of the overarching goals of the class is not to teach you C-- and indeed, C is officially now behind us-- but really to teach you how to program. 

But realize, too, that even as we dive into a new language today, the goal is not to take a course on one language or another. Indeed, I, myself, back in the day took CS50 and just one other follow-on class, where I learned how to program. And every language since then have I pretty much taught myself, learned from others, learned by reading other code, and really bootstrapping myself from that. So after just this term, hopefully will you have the power to teach yourselves new languages. And today, we start that together. 

All right. So where do we begin? Back in week 0-- this is, recall, where we began, just making a little cat on the screen say "Hello world." And very quickly, things escalated a week later and started looking like this. Now, hopefully, over the past several weeks, you've begun to see through the syntax and see the underlying concepts and ideas that actually matter. But even so, there's a lot of cognitive overhead. There's a lot of syntactic overhead just to getting something simple done in this language called C. 

So starting today, we're going to introduce you to another programming language called Python that has been gaining steam in recent years and is wonderfully applicable, not only for the sort of command line programs that we've been writing in our terminal windows, but also in data science applications, analytics of large data sets, web programming, and the like. So this is the type of language that can actually solve many problems. And wonderfully, if we want to say "Hello, world" starting today in this new language, Python, all we need type is this-- typing the commands that you actually ultimately care about. 

So how do we get to that point ultimately? Well, recall that in C, we had this process of compiling our code and then running it, as with make or more specifically, as with clang, and then running it with the file ./hello, representing a file in your current working directory. 

Today, even that process gets a little easier in that it's no longer a two-step process to write and run code. It's now just one. But it's a little bit different from the past, whereas in the past, we've, indeed, compiled our code from source code into machine code and then done ./ in order to run it. Just as in a Mac or PC, you would double click an icon, Python is used a little differently. And other languages are used in the same way, too. 

You don't run the programs directly per se. You instead, literally, starting today, run a program that itself is called Python. And you pass as input to it the name of the file containing your source code. So Python itself is the program. It supports command line arguments. 

And one of those arguments can be the name of your very program, which means we don't have to very annoyingly keep compiling and recompiling our code every time we make a change. If you want to make a change to your code, all you need do is save your file and rerun this command. 