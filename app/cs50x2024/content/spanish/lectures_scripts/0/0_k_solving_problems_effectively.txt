Por eso ese algoritmo me llevaría a la solución mucho más rápido. Y podemos apreciar esto incluso si solo observamos algunos de los números, en última instancia, de la siguiente manera. Si empiezo con, digamos, 1,024 páginas en total en la guía telefónica, y busco a Mike Smith, y divido y conquisto este problema, dividiendo el problema por la mitad y por la mitad y por la mitad, voy a 512, voy a 256, 128, 64, 32, 16, ocho, cuatro, dos y uno. Después de solo 10 pasos, encontré la página de Mike Smith. Por el contrario, ese primer algoritmo, donde solo hacía una página a la vez, ¿cuántos pasos, tal vez, me podrían haber llevado a encontrar a Mike Smith? Sí, como 700, 800, aproximadamente donde podrían estar las S. Entonces, en el peor de los casos, 1,000 páginas, si lo reviso todo. El segundo algoritmo, tal vez, 500 páginas porque voy dos veces a la vez. Pero Dios mío, 10 pasos con este algoritmo aquí. Y lo más probable es que ese sea el algoritmo al que la mayoría de nosotros en esta sala recurriríamos por defecto, lo que quiere decir que, como veremos, gran parte de la resolución de problemas en realidad se trata solo de aprovechar su intuición existente y sentirse cómodo con ideas que ahora solo necesita traducir. de tal manera que las máquinas y otros humanos puedan entender. Entonces, ¿cómo podríamos pensar en cuánto mejor es ese algoritmo? Bueno, considera esta primera línea aquí. En este eje y o eje vertical, permítanme describir esto como el tiempo para resolver algún problema. Y en la horizontal, o eje x, el tamaño del problema. Entonces, el número de páginas en la guía telefónica aumentaría a medida que avanzas hacia la derecha y la cantidad de segundos o giros de página requeridos aumentaría a lo largo del eje y aquí. Entonces, ese primer algoritmo, representado aquí en rojo, sugiere una relación uno a uno entre el número de páginas en el libro y el número de segundos para encontrar a alguien. Entonces tienes esta línea recta. Una pendiente de 1 sobre 1, por así decirlo. Entonces, si consideramos el segundo algoritmo, el segundo algoritmo también será una línea recta, pero esa línea recta estará más abajo en el gráfico. ¿Por qué? Porque para cualquier problema de tamaño, me tomará la mitad del tiempo buscar en esa guía telefónica porque, por supuesto, voy dos páginas a la vez. Entonces, si vemos esto, por ejemplo, si esta línea discontinua representa algún número de páginas en la guía telefónica, tal vez 1,024, bueno, puedes ver que podría tomar tantos segundos o giros de página para encontrar realmente a Mike Smith con ese segundo algoritmo. Pero en el primer algoritmo, ese mismo número de páginas tomaría mucho más tiempo para resolver, literalmente el doble de tiempo en este caso. Bueno, ¿qué pasa con el tercer algoritmo? Bueno, incluso si tu memoria de lo que es un logaritmo es un poco confusa, solo describe una forma fundamentalmente diferente. La línea verde describe ese tercer y último algoritmo mediante el cual dividiste el problema no una página a la vez ni dos páginas a la vez, sino 50% una y otra y otra vez. Lo tienes una y otra y otra vez. Y observe que a medida que el número de páginas en la guía telefónica aumenta mucho, apenas tiene un impacto en cuánto tiempo lleva resolver ese problema. Por ejemplo, si Cambridge y Allston, dos ciudades aquí en Massachusetts, se fusionan el año que viene y sus guías telefónicas se convierten en una única guía telefónica que es dos veces más grande, por lo que no son 1,000 páginas cada una, sino 2000 páginas en total, ¿cuántos pasos más podría llevarnos encontrar a Mike Smith en la guía telefónica del próximo año si tiene 2000 páginas en lugar de 1,000? Solo un paso más. Pero los dos primeros algoritmos, eso es otros 1,000 pasos, tal vez, u otros 500. Estas son diferencias fundamentalmente grandes en eficiencia, por así decirlo. Así que traduzcamos esta idea, esta intuición, en el primer ejemplo de código.