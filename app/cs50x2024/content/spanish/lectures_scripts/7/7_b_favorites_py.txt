[MÚSICA SONANDO] DAVID MALAN: Muy bien. Esta es CS50 y el día de hoy continuaremos revisando Python, pero además presentaremos otro lenguaje. Este se llama SQL, o Lenguaje de Consulta Estructurado, y nos permitirá resolver algunos problemas diferentes, así como algunos problemas anteriores, de una mejor manera. Pero para hacer esto, intentemos recordar primero algunos de los problemas.

Por supuesto, este es solo un ejemplo de una hoja de cálculo. Es probable que las uses con bastante frecuencia, ya sea en forma de Hojas de cálculo de Google, Excel o Numbers de Apple, etc. Y esta es en realidad la forma más sencilla de lo que podríamos llamar una base de datos, simplemente una especie de aplicación que almacena muchos datos. Y es probable que si alguna vez has registrado inscripciones para un grupo de estudiantes o has hecho que las personas se registren o llenen un formulario o una encuesta, hayas utilizado Formularios de Google para ingresar tus datos en una Hoja de cálculo de Google. Por eso pensamos que comenzaríamos allí hoy, un problema representativo en el que es posible que desees recopilar una gran cantidad de datos de los usuarios para luego hacer algo con ellos, pero idealmente de una manera más poderosa de lo que podrías hacer como ser humano por tu cuenta.

Entonces, hemos implementado un Formulario de Google que simplemente hace un par de preguntas hoy. ¿Cuáles son tus programas de televisión favoritos? Y te pedimos el título de tu programa favorito y el género o géneros en los que se incluye ese programa. Si no te importa, continúa y abre esta URL aquí en tu computadora portátil o teléfono. Si no tienes uno, está bien. Puedes usar el de la persona que está a tu lado, si me lo permites. Tómate un momento para ir a esa URL y responder esas dos preguntas. ¿Cuál es el título de tu programa de televisión favorito y en qué género o géneros se incluye? Programas de televisión favoritos.

Y cuando vayas a esa URL, te encontrarás de nuevo en este formulario here, que te pide el título y tu programa favorito. Entonces, por el aspecto de mi propia pantalla, aquí tenemos unas 62 respuestas, ya han llegado 74 respuestas, por lo que podemos rastrear esto en vivo. Entonces, 111 respuestas hasta ahora. Son muchos programas de televisión favoritos. Este número sigue aumentando. 169, hasta el siguiente, 191. Que sigan llegando. Una por persona está bien. Nos dará datos más que suficientes. 246.

Le daremos unos segundos más, pero basta con decir que esta es una gran cantidad de datos. Y si el siguiente paso en este proceso fuera que yo analizara los datos porque tengo curiosidad por saber cuál es el programa más popular en el campus o si quisiera hacer algún otro trabajo analítico sobre esto, sería útil tener todos estos datos, no en el formato de interfaz del propietario de Google Form, sino en el formato de Hoja de cálculo de Google con filas y columnas, un formato con el que probablemente estés bastante familiarizado. Así que dejaremos que este contador siga subiendo y subiendo, y continuaré y haré clic en las respuestas. Y si realmente quisiéramos, podríamos ver a través de: The Office está allí arriba, seguido por Games of Thrones, Friends, vale. Quizás bastante predecible aquí.

Déjame seguir adelante y hacer clic en este ícono, que abrirá la versión Hoja de cálculo de Google de esto. Y verás que hay tres columnas de forma predeterminada.

[RISAS]

Oh, eso es gracioso.

[APLAUSOS]

Gracias. Gracias.

Vale. Vale. Bien jugado. Ahora, verás que, de forma predeterminada, tenemos tres columnas. Marca de tiempo, Google Forms acaba de hacerlo automáticamente para marcar la hora de envío del formulario. El título proviene de la primera pregunta. Los géneros provienen de la segunda pregunta. Y si seguimos desplazándonos y desplazándonos, es probable que veamos más y más filas. Supongamos que ya tenemos suficientes de estas filas, ¿y cómo podríamos analizar los datos? Bueno, si eres bastante experto con Hojas de cálculo de Google, Excel o Numbers, tal vez podrías usar algunas funciones que están integradas en estos programas o podrías hacer algo de Comando-F o Control-F y buscar el programa favorito que estás buscando para intentar ejecutar algunos números.

Pero hoy en día tenemos capacidades de programación. Y si aún no has utilizado esta función, ve al menú de archivos de Google Spreadsheet. Puedes ir a descargar y puedes descargar tus datos en varios formatos. Y el más útil que propongo por ahora será este, Valores separados por comas o CSV. Y ya hemos visto esto antes. De hecho, ya lo has generado antes. Entonces, si sigo adelante y hago eso, descargó rápidamente un archivo CSV que realmente quería poder abrir en Excel o Numbers de Apple, etc. Pero en lugar de eso, hagamos algo con eso y sigamos adelante y pongámoslo, por ejemplo, en mi IDE para poder hacer algo con él.

Voy a tomar mi archivo descargado aquí. Y continuaré y lo arrastraré al IDE. Y ahora verás un montón de archivos aquí. Déjame poner-- caramba. Déjame poner esto justo en la raíz de mi carpeta. Y veremos este archivo aquí. Y si hago doble clic en él, verás exactamente los mismos datos, aunque en formato CSV. Entonces se ve igual, pero tenemos comas que separan los valores. Y Google Sheets hizo eso por nosotros automáticamente.

Así que ahora escribamos un programa que analice estos datos y veamos si podemos dar sentido a algunos de los valores más populares que hay allí. Déjame seguir adelante y cerrar esto, abrir un nuevo archivo y continuaré y lo llamaré, por ejemplo, favoritos.py, ya que el objetivo es averiguar los favoritos de todos aquí. Y déjame seguir adelante y usar parte de la sintaxis de la semana pasada con la que es posible que estés familiarizado ahora desde P set 6. Déjame seguir adelante e importar CSV, el módulo, para tener acceso a esa biblioteca de funciones. Luego, déjame hacer esto con Abrir. Y luego voy a continuar y abrir este archivo, y podría cambiarle el nombre, pero ya sabes, también puedo tomar el nombre del archivo completo de esta manera. Es un poco excesivo, pero continuaré y lo pegaré en modo lectura. Y eso me da un archivo. Déjame seguir adelante y alejarme un poco.

Y una vez que tengo este archivo, puedo lanzarlo a un lector de dictados, por ejemplo, para facilitar la lectura del CSV. Entonces, el lector obtiene CSV. DictReader. Pasa ese archivo. Y después de esto, ahora tengo la capacidad de iterar sobre cada fila como esta, como probablemente también lo hiciste para el ADN o uno o más problemas, también. Ahora, solo como una comprobación de cordura, permítanme seguir adelante e imprimir cada uno de los títulos de la fila. Entonces no voy a ver nada nuevo aquí, pero esta será una pequeña comprobación de cordura de que estoy escribiendo el código correcto. Entonces ejecuta Python de favoritos.py, y listo, fwoom, están todos los datos. Entonces, The Office está tanto al principio como al final aquí, al parecer.

Muy bien, bueno, que está todo bien y bien, un buen trampolín, pero comencemos a analizar estos datos, esta vez usando algo de código. Entonces déjame seguir adelante y decir esto. Supongamos que quisiera hacer un seguimiento y determinar cuál es el programa más popular. Entonces, tengo este gran archivo CSV con título, título, título, título. Invariablemente, va a haber algunos duplicados. Es probable que a muchos de ustedes les guste The Office o algún otro programa, por lo que sería bueno agregar esos datos. ¿Cuál podría ser una estructura de datos útil en Python mediante la cual para cada fila podemos usar esta estructura de datos para hacer el equivalente a 1, 2, 3 y contar cada una de las apariciones de esos títulos?

¿Alguna...? Vale, Escuché una tabla hash, pero ¿más propiamente en Python? Un diccionario. Entonces, un diccionario es algo así como la navaja suiza de las estructuras de datos para muchas personas en el sentido de que te permite almacenar claves y valores, y esas claves pueden ser cadenas, y esos valores pueden ser cualquier cosa que desees, incluyendo, por ejemplo, en este caso, números, como un contador, es una estructura de datos realmente versátil cuando solo quieres arrojar algunos datos en una estructura de datos y hacer algo con ellos. Entonces, déjame seguir adelante y darme un diccionario en la parte superior del archivo. Puedo hacer esto de varias maneras, y si mi objetivo es almacenar los recuentos de cada una de estas fichas, podría llamarlo recuentos y podría establecerlo como igual a dict(), que es solo una función que me entrega un diccionario vacío. O recuerdo que puedo usar esta sintaxis, que es equivalente a una notación abreviada.

Pero lo que quiero hacer ahora dentro de mi bucle, cada vez que itere a través de este archivo, quiero verificar si mi... he visto este título antes, quiero agregar 1 a mi contador. ¿Pero si nunca antes he visto este título, qué quiero hacer en su lugar? ¿Sí?

AUDIENCIA: [INAUDIBLE]

DAVID MALAN: ¿Agregar el título al diccionario como clave con el valor de qué, la primera vez que lo veo? Bueno, la primera vez que lo veo.

AUDIENCIA: 1.

DAVID MALAN: Entonces podemos simplemente inicializarlo a 1. Entonces hay dos escenarios aquí. O hemos visto este título antes y queremos hacer más 1, o no hemos visto el título antes y solo queremos establecerlo como igual