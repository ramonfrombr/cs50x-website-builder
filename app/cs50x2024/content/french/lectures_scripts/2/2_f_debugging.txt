Mais pour un programme comme hello.c, qui implique plusieurs fichiers différents. Par exemple, ce code impliquait encore une fois mon code que nous avons écrit la semaine dernière. Cela implique la bibliothèque CS50, que le personnel a écrite il y a des années. Et il implique la bibliothèque standard io.h. C'est encore un autre fichier. C'est comme trois fichiers différents que Clang doit franchement compiler pour vous.

Maintenant, ce serait très fastidieux si nous devions exécuter Clang trois fois pour faire toute cette compilation. Heureusement, ce n'est pas le cas. Tout se passe automatiquement. Ainsi, la dernière étape de la compilation d'un programme après son prétraitement, après sa compilation, après son assemblage, consiste à combiner tous les zéros et les uns des fichiers impliqués dans un seul gros fichier, comme Hello ou a.out.

Donc si hello.c a démarré en tant que code source, tout comme CS50.C, quelque part sur le disque dur de l'ordinateur, tout comme Standard IO.C, quelque part sur le disque dur de l'ordinateur, il s'avère que le printf est en fait dans son propre fichier dans Standard IO. la bibliothèque. Mais ce sont les trois fichiers impliqués pour le programme que je viens de décrire.

Donc, une fois que nous avons réellement continué et assemblé celui-ci, il devient un tas de zéros et de uns. Nous assemblons celui-ci, tout un tas de zéros et de uns. Celui-ci, tout un tas de zéros et de uns. C'est comme trois fichiers séparés qui sont ensuite liés ensemble, en quelque sorte mélangés, en un seul gros fichier appelé Hello ou appelé a.out.

Et mon Dieu, c'est beaucoup de complexité. Mais c'est ce que les humains ont construit et développé au cours des dernières décennies en matière d'écriture de logiciels. À l'époque, tout a commencé par des zéros et des uns. Ce n'était pas amusant. Le langage assembleur, aussi effrayant qu'il paraisse, était en fait un peu plus facile, un peu plus accessible à l'écriture pour les humains.

Mais finalement, nous, les humains, en avons eu assez, et sont ainsi nés des langages comme C et C++ et Python et PHP et Ruby et d'autres. Cela a été une évolution des langages en cours de route. Donc, nous pouvons maintenant simplement faire abstraction de la compilation. Lorsque vous compilez votre code, tout cela se produit. Mais tout ce qui nous importe vraiment à la fin de la journée, c'est l'entrée, votre code source, la sortie sous forme de code machine.

Mais ce sont les différentes étapes qui se déroulent. Et si jamais vous voyez des commandes à l'aspect énigmatique à l'écran, cela pourrait en effet concerner certaines de ces étapes intermédiaires. D'accord, des questions sur ce qu'est la compilation ou le prétraitement, la compilation, l'assemblage ou la liaison ? Quelque chose du tout ?