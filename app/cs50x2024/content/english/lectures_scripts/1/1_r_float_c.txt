What about float? Well, let me go ahead and write another program real quick called float.c. And this one is going to use floating point values, which again, is just synonymous with real numbers with decimal points. Let me go ahead and include CS50.h, include stdio.h. And then int main void and then my open curly braces. And now let's do this. Let me get the price of something. So int price equals get float, what's the price, for instance. Semicolon. And now let me do something mathematical with this. Let me go ahead and say, your total is. And now let me just do the total price with tax, for instance. In Massachusetts, sales tax is 6.25%. So let's just write a little program that does that. Your total is-- not percent s, because it's not a string. Not percent i, because it's not an integer. It should be percent f for float. And in fact, I goofed. I actually made a mistake here accidentally. I don't want to store the price in an int if I'm getting it as a float. If I'm getting a real number with a decimal point, I probably want to store it as a float, as well. So again, different format codes, different placeholders for different contexts. Now let me go ahead and do this. And if I want to plug in the price, I'm going to do price times 1.0625, which just mathematically means add 106.25%-- or multiply, rather, the price by 106.25% so that you actually see the total with tax. All right, so let's go ahead and compile this. Make float, Enter. No error messages, so that's already promising. ./float. And what's the price? How about $100. OK, that's a little excessively precise. The total price is $106.250000. But that's just because the computer, per last week, is using some number of bits to store values. And the computer happens to be capable of showing this many digits after the decimal point. But what if you don't want to do that? Well, it turns out there's some pretty arcane tricks you can do. Instead of doing percent f, I can actually do percent dot 2f, which again, you would only know from having heard it before looking it up in a book or reference. That's going to show me only two digits after the decimal point. So if I recompile this code and make float and do ./float, now notice if the price is $100, now my total is a little more user friendly-- 106.25. So in short, this is the f in printf. Just as you can print something to the screen, you can format it as by telling printf to only show so many digits.