Entonces, ¿cómo obtenemos salidas a partir de entradas? Eso es lo que hay dentro de la llamada caja negra, y aquí es donde entra en juego la informática. Un algoritmo. ¿Alguien sabe qué término es este? ¿Qué es un algoritmo? Se lee en todas partes en estos días, especialmente en el contexto de carros autónomos, Siri y Alexa, etcétera. ¿Si? Una manera establecida de hacer algo, así es. En el contexto de la solución de problemas, un algoritmo es simplemente una instrucción paso a paso para solucionar algún problema. Entonces, ¿cuál podría ser un algoritmo para un problema que quizás queramos resolver? Bueno, considere esto. Este es un problema de la vieja escuela en el que quizás tenga muchos y muchos nombres y montones de números, y con suerte, esos nombres están ordenados alfabéticamente de la A a la Z en un libro como este. Y aunque la mayoría de nosotros ya no recurrimos a esta tecnología, considere que es realmente igual a su iPhone o teléfono Android u otro dispositivo, que tiene todos sus contactos de arriba a abajo y puede desplazarse por ellos de la A a la Z, o puede buscarlos escribiendo el el pequeño cuadro de autocompletar. ¿Cómo es que incluso su teléfono resuelve este problema? Bueno, consideremos un enfoque simple. Voy a mirar la primera página y buscar a alguien en la guía telefónica. Supongamos que el nombre de esa persona es Mike Smith, apellido empezando con S. Permítanme seguir y mirar hacia abajo. No está aquí. Déjenme pasar la página. Déjenme pasar la página. Déjenme pasar la página. Este es un algoritmo. Es un proceso paso a paso para resolver un problema, encontrar a Mike Smith. ¿Diría que este algoritmo es correcto? Si. Quiero decir, es bastante lento, es bastante estúpido, en el sentido de que tomará, Dios mío, para siempre, como cientos de cambios de página para encontrar a Mike Smith. Pero si está ahí, lo encontraré de acuerdo con este enfoque paso a paso. ¿Qué pasa si acelero las cosas un poco solo porque es tedioso, de lo contrario? Entonces hago dos, cuatro, seis, ocho, 10, 12, 14, 16 y así sucesivamente. ¿Ese algoritmo es más rápido? Absolutamente. Literalmente el doble de rápido. ¿Es correcto? AUDIENCIA: No. DAVID MALAN: No. ¿Por qué? [VOCES QUE SE INTERPONEN] DAVID MALAN: Sí, podríamos saltárnoslos. Quizás tenga mala suerte y finalmente llegue a la S. Pero maldita sea si Mike no estuviera entre dos páginas cuando las paso a la vez. Entonces, no es un defecto fatal. Podría arreglar ese algoritmo simplemente diciendo que si llega a la sección T o quizás Sn en lugar de Sm, simplemente retroceda una o más páginas solo para corregir ese error o equivocación, por así decirlo. Pero, al menos, es dos veces más rápido. Pero si esta guía telefónica tiene 1000 y algo de páginas, todavía me tomará quizás 500 giros por pares solo para encontrar a Mike Smith. Eso es un tiempo solo para buscar a alguien. Pero la mayoría de nosotros, si ha usado esta tecnología, en cambio, ¿qué hacíamos en el pasado? Vaya aproximadamente a la mitad si no hay letras pequeñas a un lado para hacer trampa. Entonces, aproximadamente en el medio. Estoy en la sección M. Ahora las M, por supuesto, significan que Mike no está de esta manera, que serían las A. Probablemente esté de esta manera hacia las Z porque la S, por supuesto, está entre la M y la Z. Entonces, en este punto, literalmente puedo dividir el problema por la mitad, tirar la mitad del problema de manera muy dramática e innecesaria, indicando que ahora hemos pasado de unas 1000 páginas impares a ¿qué? 500. Y puedo hacerlo de nuevo. Ah, fui un poco demasiado lejos. Ahora estoy en la sección T, así que puedo dividir el problema por la mitad nuevamente, tirar esa mitad y ahora estoy de 1000 a 500 a solo 250 páginas, después de solo dos pasos en este proceso paso a paso. Y si repito esto una y otra y otra vez, con suerte, al final, me quedaré, digamos, con solo una página en la que Mike Smith esté o no. Y puedo llamarlo o dejarlo.